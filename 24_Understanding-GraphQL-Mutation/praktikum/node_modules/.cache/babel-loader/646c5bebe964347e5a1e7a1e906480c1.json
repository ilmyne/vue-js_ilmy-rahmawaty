{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"C:/Users/Asus X441M/Documents/ALTERRA/vue-js_ilmy-rahmawaty/23_Understanding-GraphQL-Query/belajar/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n  if (variableValues === void 0) {\n    variableValues = {};\n  }\n\n  if (execOptions === void 0) {\n    execOptions = {};\n  }\n\n  var mainDefinition = apollo_utilities_1.getMainDefinition(document);\n  var fragments = apollo_utilities_1.getFragmentDefinitions(document);\n  var fragmentMap = apollo_utilities_1.createFragmentMap(fragments);\n  var resultMapper = execOptions.resultMapper;\n\n  var fragmentMatcher = execOptions.fragmentMatcher || function () {\n    return true;\n  };\n\n  var execContext = {\n    fragmentMap: fragmentMap,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    resultMapper: resultMapper,\n    resolver: resolver,\n    fragmentMatcher: fragmentMatcher\n  };\n  return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\n\nexports.graphql = graphql;\n\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n  var fragmentMap = execContext.fragmentMap,\n      contextValue = execContext.contextValue,\n      variables = execContext.variableValues;\n  var result = {};\n  selectionSet.selections.forEach(function (selection) {\n    if (variables && !apollo_utilities_1.shouldInclude(selection, variables)) {\n      return;\n    }\n\n    if (apollo_utilities_1.isField(selection)) {\n      var fieldResult = executeField(selection, rootValue, execContext);\n      var resultFieldKey = apollo_utilities_1.resultKeyNameFromField(selection);\n\n      if (fieldResult !== undefined) {\n        if (result[resultFieldKey] === undefined) {\n          result[resultFieldKey] = fieldResult;\n        } else {\n          merge(result[resultFieldKey], fieldResult);\n        }\n      }\n    } else {\n      var fragment = void 0;\n\n      if (apollo_utilities_1.isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        fragment = fragmentMap[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(\"No fragment named \" + selection.name.value);\n        }\n      }\n\n      var typeCondition = fragment.typeCondition.name.value;\n\n      if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n        var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);\n        merge(result, fragmentResult);\n      }\n    }\n  });\n\n  if (execContext.resultMapper) {\n    return execContext.resultMapper(result, rootValue);\n  }\n\n  return result;\n}\n\nfunction executeField(field, rootValue, execContext) {\n  var variables = execContext.variableValues,\n      contextValue = execContext.contextValue,\n      resolver = execContext.resolver;\n  var fieldName = field.name.value;\n  var args = apollo_utilities_1.argumentsObjectFromField(field, variables);\n  var info = {\n    isLeaf: !field.selectionSet,\n    resultKey: apollo_utilities_1.resultKeyNameFromField(field),\n    directives: apollo_utilities_1.getDirectiveInfoFromField(field, variables),\n    field: field\n  };\n  var result = resolver(fieldName, rootValue, args, contextValue, info);\n\n  if (!field.selectionSet) {\n    return result;\n  }\n\n  if (result == null) {\n    return result;\n  }\n\n  if (Array.isArray(result)) {\n    return executeSubSelectedArray(field, result, execContext);\n  }\n\n  return executeSelectionSet(field.selectionSet, result, execContext);\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return result.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  });\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction merge(dest, src) {\n  if (src !== null && _typeof(src) === 'object') {\n    Object.keys(src).forEach(function (key) {\n      var srcVal = src[key];\n\n      if (!hasOwn.call(dest, key)) {\n        dest[key] = srcVal;\n      } else {\n        merge(dest[key], srcVal);\n      }\n    });\n  }\n}\n\nexports.merge = merge;","map":{"version":3,"mappings":"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","names":["graphql","resolver","document","rootValue","contextValue","variableValues","execOptions","mainDefinition","apollo_utilities_1","fragments","fragmentMap","resultMapper","fragmentMatcher","execContext","executeSelectionSet","selectionSet","exports","variables","result","selections","forEach","selection","fieldResult","executeField","resultFieldKey","undefined","merge","fragment","name","value","Error","typeCondition","fragmentResult","field","fieldName","args","info","isLeaf","resultKey","directives","Array","isArray","executeSubSelectedArray","map","item","hasOwn","Object","prototype","hasOwnProperty","dest","src","keys","srcVal","key","call"],"sourceRoot":"","sources":["../src/graphql.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
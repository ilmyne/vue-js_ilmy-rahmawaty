{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { hasDirectives, getMainDefinition } from 'apollo-utilities';\nimport * as Async from 'graphql-anywhere/lib/async';\nvar graphql = Async.graphql;\nimport { removeClientSetsFromDocument, normalizeTypeDefs } from './utils';\n\nvar capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport var withClientState = function withClientState(clientStateConfig) {\n  if (clientStateConfig === void 0) {\n    clientStateConfig = {\n      resolvers: {},\n      defaults: {}\n    };\n  }\n\n  var defaults = clientStateConfig.defaults,\n      cache = clientStateConfig.cache,\n      typeDefs = clientStateConfig.typeDefs,\n      fragmentMatcher = clientStateConfig.fragmentMatcher;\n\n  if (cache && defaults) {\n    cache.writeData({\n      data: defaults\n    });\n  }\n\n  return new (function (_super) {\n    __extends(StateLink, _super);\n\n    function StateLink() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    StateLink.prototype.writeDefaults = function () {\n      if (cache && defaults) {\n        cache.writeData({\n          data: defaults\n        });\n      }\n    };\n\n    StateLink.prototype.request = function (operation, forward) {\n      if (forward === void 0) {\n        forward = function forward() {\n          return Observable.of({\n            data: {}\n          });\n        };\n      }\n\n      if (typeDefs) {\n        var directives_1 = 'directive @client on FIELD';\n        var definition_1 = normalizeTypeDefs(typeDefs);\n        operation.setContext(function (_a) {\n          var _b = _a.schemas,\n              schemas = _b === void 0 ? [] : _b;\n          return {\n            schemas: schemas.concat([{\n              definition: definition_1,\n              directives: directives_1\n            }])\n          };\n        });\n      }\n\n      var isClient = hasDirectives(['client'], operation.query);\n      if (!isClient) return forward(operation);\n      var resolvers = typeof clientStateConfig.resolvers === 'function' ? clientStateConfig.resolvers() : clientStateConfig.resolvers;\n      var server = removeClientSetsFromDocument(operation.query);\n      var query = operation.query;\n      var type = capitalizeFirstLetter((getMainDefinition(query) || {}).operation) || 'Query';\n\n      var resolver = function resolver(fieldName, rootValue, args, context, info) {\n        if (rootValue === void 0) {\n          rootValue = {};\n        }\n\n        var resultKey = info.resultKey;\n        var aliasedNode = rootValue[resultKey];\n        var preAliasingNode = rootValue[fieldName];\n        var aliasNeeded = resultKey !== fieldName;\n\n        if (aliasedNode !== undefined || preAliasingNode !== undefined) {\n          return aliasedNode || preAliasingNode;\n        }\n\n        var resolverMap = resolvers[rootValue.__typename || type];\n\n        if (resolverMap) {\n          var resolve = resolverMap[fieldName];\n          if (resolve) return resolve(rootValue, args, context, info);\n        }\n\n        return (aliasNeeded ? aliasedNode : preAliasingNode) || (defaults || {})[fieldName];\n      };\n\n      if (server) operation.query = server;\n      var obs = server && forward ? forward(operation) : Observable.of({\n        data: {}\n      });\n      return new Observable(function (observer) {\n        var _complete = false;\n        var handlingNext = false;\n        obs.subscribe({\n          next: function next(_a) {\n            var data = _a.data,\n                errors = _a.errors;\n            var observerErrorHandler = observer.error.bind(observer);\n            var context = operation.getContext();\n            handlingNext = true;\n            graphql(resolver, query, data, context, operation.variables, {\n              fragmentMatcher: fragmentMatcher\n            }).then(function (nextData) {\n              observer.next({\n                data: nextData,\n                errors: errors\n              });\n\n              if (_complete) {\n                observer.complete();\n              }\n\n              handlingNext = false;\n            }).catch(observerErrorHandler);\n          },\n          error: observer.error.bind(observer),\n          complete: function complete() {\n            if (!handlingNext) {\n              observer.complete();\n            }\n\n            _complete = true;\n          }\n        });\n      });\n    };\n\n    return StateLink;\n  }(ApolloLink))();\n};","map":{"version":3,"mappings":"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","names":["ApolloLink","Observable","hasDirectives","getMainDefinition","Async","removeClientSetsFromDocument","normalizeTypeDefs","capitalizeFirstLetter","charAt","toUpperCase","str","slice","withClientState","clientStateConfig","resolvers","defaults","cache","typeDefs","fragmentMatcher","writeData","data","__extends","StateLink","operation","forward","of","directives_1","definition_1","setContext","_a","_b","schemas","concat","definition","directives","isClient","query","server","type","resolver","fieldName","rootValue","args","context","info","aliasedNode","resultKey","preAliasingNode","aliasNeeded","undefined","resolverMap","__typename","resolve","obs","complete","handlingNext","subscribe","next","errors","observerErrorHandler","observer","error","bind","getContext","graphql","variables","then","nextData","catch"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}